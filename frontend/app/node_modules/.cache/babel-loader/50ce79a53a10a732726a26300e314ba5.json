{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\TrevorArnold\\\\Documents\\\\programming\\\\goals\\\\frontend\\\\app\\\\src\\\\Goals.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { useQuery, useMutation } from 'react-apollo';\nimport { gql } from 'apollo-boost';\nconst QUERY_GOALS = gql`\nquery {\n    allGoals {\n      summary,\n      details\n    }\n  }\n`;\nexport function GoalInfo() {\n  _s();\n\n  // Polling: provides near-real-time synchronization with\n  // your server by causing a query to execute periodically\n  // at a specified interval\n  const {\n    data,\n    loading\n  } = useQuery(QUERY_GOALS, {\n    pollInterval: 500 // refetch the result every 0.5 second\n\n  }); // should handle loading status\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 23\n  }, this);\n  return data.allGoals.map(({\n    id,\n    summary,\n    details\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Goal - \", id, \": \", summary, \" \", details]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this));\n}\n\n_s(GoalInfo, \"uHu6+Av6iz/Cemw652GCrFuaHvo=\", false, function () {\n  return [useQuery];\n});\n\n_c = GoalInfo;\nconst CREATE_GOAL = gql`\n  mutation CreateGoal($summary: String!, $details: String!){\n    createGoal (summary: $summary, details: $details){\n      id\n      summary\n      details\n  }\n}\n`;\nexport function CreateGoal() {\n  _s2();\n\n  let inputDetails, inputSummary;\n  const [createGoal, {\n    data\n  }] = useMutation(CREATE_GOAL);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        createGoal({\n          variables: {\n            data: {\n              details: inputDetails.value,\n              summary: inputSummary.value\n            }\n          }\n        });\n        setTimeout(() => {\n          console.log(inputDetails.value);\n        }, 2000);\n        inputDetails.value = '';\n        inputSummary.value = '';\n        window.location.reload();\n      },\n      style: {\n        marginTop: '2em',\n        marginBottom: '2em'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Details: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: node => {\n          inputDetails = node;\n        },\n        style: {\n          marginRight: '1em'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Summary: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: node => {\n          inputSummary = node;\n        },\n        style: {\n          marginRight: '1em'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          cursor: 'pointer'\n        },\n        children: \"Add a Goal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(CreateGoal, \"MckIBTqls/PFESxtojNymopkcAE=\", false, function () {\n  return [useMutation];\n});\n\n_c2 = CreateGoal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GoalInfo\");\n$RefreshReg$(_c2, \"CreateGoal\");","map":{"version":3,"sources":["C:/Users/TrevorArnold/Documents/programming/goals/frontend/app/src/Goals.js"],"names":["React","useQuery","useMutation","gql","QUERY_GOALS","GoalInfo","data","loading","pollInterval","allGoals","map","id","summary","details","CREATE_GOAL","CreateGoal","inputDetails","inputSummary","createGoal","e","preventDefault","variables","value","setTimeout","console","log","window","location","reload","marginTop","marginBottom","node","marginRight","cursor"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useQuery, useMutation } from 'react-apollo';\r\nimport { gql } from 'apollo-boost';\r\nconst QUERY_GOALS = gql`\r\nquery {\r\n    allGoals {\r\n      summary,\r\n      details\r\n    }\r\n  }\r\n`;\r\n\r\nexport function GoalInfo() {\r\n  // Polling: provides near-real-time synchronization with\r\n  // your server by causing a query to execute periodically\r\n  // at a specified interval\r\n  const { data, loading } = useQuery(\r\n    QUERY_GOALS, {\r\n      pollInterval: 500 // refetch the result every 0.5 second\r\n    }\r\n  );\r\n  \r\n  // should handle loading status\r\n  if (loading) return <p>Loading...</p>;\r\n   \r\n  return data.allGoals.map(({ id, summary, details }) => (\r\n    <div key={id}>\r\n      <p>\r\n        Goal - {id}: {summary} {details}\r\n      </p>\r\n    </div>\r\n  ));\r\n}\r\n\r\nconst CREATE_GOAL = gql`\r\n  mutation CreateGoal($summary: String!, $details: String!){\r\n    createGoal (summary: $summary, details: $details){\r\n      id\r\n      summary\r\n      details\r\n  }\r\n}\r\n`;\r\n\r\nexport function CreateGoal() {\r\n  let inputDetails, inputSummary;\r\n  const [createGoal, { data } ] = useMutation(CREATE_GOAL);\r\n  return (\r\n    <div>\r\n      <form\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          createGoal({ variables: { data: {\r\n            details: inputDetails.value,\r\n            summary: inputSummary.value\r\n        }}});\r\n        setTimeout(() => {  console.log(inputDetails.value); }, 2000);\r\n        inputDetails.value = '';\r\n        inputSummary.value = '';\r\n        window.location.reload();\r\n      }}\r\n      style = {{ marginTop: '2em', marginBottom: '2em' }}\r\n     >\r\n     <label>Details: </label>\r\n     <input\r\n       ref={node => {\r\n        inputDetails = node;\r\n       }}\r\n       style={{ marginRight: '1em' }}\r\n     />\r\n     <label>Summary: </label>\r\n     <input\r\n       ref={node => {\r\n         inputSummary = node;\r\n       }}\r\n       style={{ marginRight: '1em' }}\r\n     />\r\n     \r\n     <button type=\"submit\" style={{ cursor: 'pointer' }}>Add a Goal</button>\r\n    </form>\r\n   </div>\r\n  );}\r\n"]},"metadata":{},"sourceType":"module"}