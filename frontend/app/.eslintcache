[{"D:\\trevor\\programming\\goals\\frontend\\app\\src\\index.js":"1","D:\\trevor\\programming\\goals\\frontend\\app\\src\\reportWebVitals.js":"2","D:\\trevor\\programming\\goals\\frontend\\app\\src\\App.js":"3","D:\\trevor\\programming\\goals\\frontend\\app\\src\\Goals.js":"4"},{"size":500,"mtime":1609301518738,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1609301518748,"results":"7","hashOfConfig":"6"},{"size":871,"mtime":1609523884112,"results":"8","hashOfConfig":"6"},{"size":3402,"mtime":1609525299685,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1h6t1zd",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"D:\\trevor\\programming\\goals\\frontend\\app\\src\\index.js",[],["21","22"],"D:\\trevor\\programming\\goals\\frontend\\app\\src\\reportWebVitals.js",[],"D:\\trevor\\programming\\goals\\frontend\\app\\src\\App.js",["23"],"import './App.css';\n\nimport React from 'react';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport { CreateGoal, GoalInfo, DeleteGoal } from './Goals';\n\nconst client = new ApolloClient({\n  uri: 'http://localhost:8000/graphql',\n  onError: ({ networkError, graphQLErrors }) => {\n    console.log('graphQLErrors', graphQLErrors)\n    console.log('networkError', networkError)\n  }\n});\n\nconst App = () => (\n  <ApolloProvider client={client}>\n    <div  class=\"uk-container\" style={{\n      backgroundColor: '#00000008',\n      display: 'flex',\n      justifyContent: 'left',\n      alignItems:'left',\n      height: '100vh',\n      flexDirection: 'column'\n    }}>\n    <h1 class=\"uk-heading-bullet\">Let's set some goals and crush them!</h1>\n\n    <CreateGoal/>\n    <GoalInfo/> \n       \n\n    </div>\n  </ApolloProvider>\n\n);\n\nexport default App;\n","D:\\trevor\\programming\\goals\\frontend\\app\\src\\Goals.js",["24","25","26"],"import React from 'react';\nimport { useQuery, useMutation } from 'react-apollo';\nimport { gql } from 'apollo-boost';\nconst QUERY_GOALS = gql`\nquery {\n    allGoals {\n      id\n      summary\n      details\n    }\n  }\n`;\n\n\n\nconst DELETE_GOAL = gql`\n  mutation DeleteGoal($id: ID!){\n    deleteGoal (id: $id) {\n      goal{\n        id\n        summary\n        details\n      }\n    }\n  }\n`;\n\nconst DeleteGoal = (keyId, deleteGoal) => {\n  let inputID;\n  inputID = keyId;\n  deleteGoal({ variables: {id:inputID}});\n  window.location.reload();\n}\n\nexport function GoalInfo() {\n  // Polling: provides near-real-time synchronization with\n  // your server by causing a query to execute periodically\n  // at a specified interval\n  const { data, loading } = useQuery(\n    QUERY_GOALS, {\n      pollInterval: 500 // refetch the result every 0.5 second\n    }\n  );\n  const [deleteGoal] = useMutation(DELETE_GOAL);\n  // should handle loading status\n  if (loading) return <p>Loading...</p>;\n   \n  return data.allGoals.map(({ id, summary, details }) => (\n    <div key={id}>\n        <h3>Goal: {summary}</h3>\n        <div class=\"uk-grid-column-small uk-grid-row-large uk-child-width-1-3@s uk-text-center\" uk-grid>\n          <div class=\"uk-card uk-card-default uk-card-body\">\n            <p>Goal Details: {details}</p>\n          </div>\n          <div class=\"uk-card uk-card-default uk-card-body\">\n            <span uk-icon=\"pencil\"></span>\n            <span>&emsp;&emsp;</span>\n            <button class=\"uk-button uk-button-danger\" onClick={() => deleteGoal({\n                                                                        variables: {id:id}})\n            }>Delete</button>\n          </div>\n        </div>\n        <hr class=\"uk-divider-icon\"/>\n    </div>\n  ));\n}\n\nfunction doSomeShit() {\n  console.log(\"welcome\")\n}\n\nconst CREATE_GOAL = gql`\n  mutation CreateGoal($summary: String!, $details: String!){\n    createGoal (summary: $summary, details: $details){\n      id\n      summary\n      details\n  }\n}\n`;\n\nexport function CreateGoal() {\n  let inputDetails, inputSummary;\n  const [createGoal, { data } ] = useMutation(CREATE_GOAL);\n  return (\n    <div>\n      <form\n        onSubmit={e => {\n          e.preventDefault();\n          createGoal({ variables: { \n            details: inputDetails.value,\n            summary: inputSummary.value\n        }});\n        // setTimeout(() => {  console.log(inputDetails.value); }, 2000);\n        inputDetails.value = '';\n        inputSummary.value = '';\n        window.location.reload();\n      }}\n      style = {{ marginTop: '2em', marginBottom: '2em' }}\n     >\n     <label class=\"uk-form-label\" >Summary: </label>\n     <div class=\"uk-form-controls\">\n     <input class=\"uk-input\" \n       ref={node => {\n         inputSummary = node;\n       }}\n       style={{ marginRight: '1em' }}\n     />\n     </div>\n     <label class=\"uk-form-label\" >Details: </label>\n     <div class=\"uk-form-controls\">\n     <input class=\"uk-input\" \n       ref={node => {\n        inputDetails = node;\n       }}\n       style={{ marginRight: '1em' }}\n     />\n     </div>    \n     <br/> \n     <button type=\"submit\" class=\"uk-button uk-button-primary\" \n              style={{ cursor: 'pointer' }}>Add a Goal</button>\n    </form>\n   </div>\n  );}\n\n\n\n// So this is the graphql that will delete a specific goal\n// mutation {\n//   deleteGoal (summary:\"test\") {\n//     goal {\n//       summary\n//       details\n//     }\n//   }\n// }",{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":6,"column":32,"nodeType":"33","messageId":"34","endLine":6,"endColumn":42},{"ruleId":"31","severity":1,"message":"35","line":28,"column":7,"nodeType":"33","messageId":"34","endLine":28,"endColumn":17},{"ruleId":"31","severity":1,"message":"36","line":68,"column":10,"nodeType":"33","messageId":"34","endLine":68,"endColumn":20},{"ruleId":"31","severity":1,"message":"37","line":84,"column":24,"nodeType":"33","messageId":"34","endLine":84,"endColumn":28},"no-native-reassign",["38"],"no-negated-in-lhs",["39"],"no-unused-vars","'DeleteGoal' is defined but never used.","Identifier","unusedVar","'DeleteGoal' is assigned a value but never used.","'doSomeShit' is defined but never used.","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]