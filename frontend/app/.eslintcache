[{"C:\\Users\\TrevorArnold\\Documents\\programming\\goals\\frontend\\app\\src\\index.js":"1","C:\\Users\\TrevorArnold\\Documents\\programming\\goals\\frontend\\app\\src\\reportWebVitals.js":"2","C:\\Users\\TrevorArnold\\Documents\\programming\\goals\\frontend\\app\\src\\App.js":"3","C:\\Users\\TrevorArnold\\Documents\\programming\\goals\\frontend\\app\\src\\Goals.js":"4"},{"size":500,"mtime":1608905510874,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"6"},{"size":854,"mtime":1609419910446,"results":"8","hashOfConfig":"6"},{"size":2711,"mtime":1609449784237,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"rq2lrb",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"C:\\Users\\TrevorArnold\\Documents\\programming\\goals\\frontend\\app\\src\\index.js",[],["20","21"],"C:\\Users\\TrevorArnold\\Documents\\programming\\goals\\frontend\\app\\src\\reportWebVitals.js",[],"C:\\Users\\TrevorArnold\\Documents\\programming\\goals\\frontend\\app\\src\\App.js",[],"C:\\Users\\TrevorArnold\\Documents\\programming\\goals\\frontend\\app\\src\\Goals.js",["22","23"],"import React from 'react';\r\nimport { useQuery, useMutation } from 'react-apollo';\r\nimport { gql } from 'apollo-boost';\r\nconst QUERY_GOALS = gql`\r\nquery {\r\n    allGoals {\r\n      id\r\n      summary\r\n      details\r\n    }\r\n  }\r\n`;\r\n\r\n\r\n\r\nconst DELETE_GOAL = gql`\r\n  mutation DeleteGoal($id: ID!){\r\n    deleteGoal (id: $id) {\r\n      goal{\r\n        id\r\n        summary\r\n        details\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst DeleteGoal = (keyId, deleteGoal) => {\r\n  let inputID;\r\n  inputID = keyId;\r\n  deleteGoal({ variables: {id:inputID}});\r\n  window.location.reload();\r\n}\r\n\r\nexport function GoalInfo() {\r\n  // Polling: provides near-real-time synchronization with\r\n  // your server by causing a query to execute periodically\r\n  // at a specified interval\r\n  const { data, loading } = useQuery(\r\n    QUERY_GOALS, {\r\n      pollInterval: 500 // refetch the result every 0.5 second\r\n    }\r\n  );\r\n  const [deleteGoal] = useMutation(DELETE_GOAL);\r\n  // should handle loading status\r\n  if (loading) return <p>Loading...</p>;\r\n   \r\n  return data.allGoals.map(({ id, summary, details }) => (\r\n    <div key={id}>\r\n        <h3>{id}: {summary}</h3>\r\n        <p>{details}</p> \r\n        <button onClick={() => deleteGoal({\r\n          variables: {id:id}})\r\n        }>Delete</button>\r\n    </div>\r\n  ));\r\n}\r\n\r\nconst CREATE_GOAL = gql`\r\n  mutation CreateGoal($summary: String!, $details: String!){\r\n    createGoal (summary: $summary, details: $details){\r\n      id\r\n      summary\r\n      details\r\n  }\r\n}\r\n`;\r\n\r\nexport function CreateGoal() {\r\n  let inputDetails, inputSummary;\r\n  const [createGoal, { data } ] = useMutation(CREATE_GOAL);\r\n  return (\r\n    <div>\r\n      <form\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          createGoal({ variables: { \r\n            details: inputDetails.value,\r\n            summary: inputSummary.value\r\n        }});\r\n        // setTimeout(() => {  console.log(inputDetails.value); }, 2000);\r\n        inputDetails.value = '';\r\n        inputSummary.value = '';\r\n        window.location.reload();\r\n      }}\r\n      style = {{ marginTop: '2em', marginBottom: '2em' }}\r\n     >\r\n     <label>Details: </label>\r\n     <input\r\n       ref={node => {\r\n        inputDetails = node;\r\n       }}\r\n       style={{ marginRight: '1em' }}\r\n     />\r\n     <label>Summary: </label>\r\n     <input\r\n       ref={node => {\r\n         inputSummary = node;\r\n       }}\r\n       style={{ marginRight: '1em' }}\r\n     />\r\n     \r\n     <button type=\"submit\" style={{ cursor: 'pointer' }}>Add a Goal</button>\r\n    </form>\r\n   </div>\r\n  );}\r\n\r\n\r\n\r\n// So this is the graphql that will delete a specific goal\r\n// mutation {\r\n//   deleteGoal (summary:\"test\") {\r\n//     goal {\r\n//       summary\r\n//       details\r\n//     }\r\n//   }\r\n// }",{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","severity":1,"message":"29","line":28,"column":7,"nodeType":"30","messageId":"31","endLine":28,"endColumn":17},{"ruleId":"28","severity":1,"message":"32","line":71,"column":24,"nodeType":"30","messageId":"31","endLine":71,"endColumn":28},"no-native-reassign",["33"],"no-negated-in-lhs",["34"],"no-unused-vars","'DeleteGoal' is assigned a value but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]